name: Release Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v4

      - name: ðŸ”§ Set up Rust
        uses: actions/setup-rust@v1
        with:
          rustup-components: clippy

      - name: ðŸ›  Build binary
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: ðŸ“¦ Package binary (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/arabic-rust-cli dist/Ù„ØºØ©-Ø§Ù„ØµØ¯Ø£
          chmod +x dist/Ù„ØºØ©-Ø§Ù„ØµØ¯Ø£

      - name: ðŸ“¦ Package binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir dist
          cp target/${{ matrix.target }}/release/arabic-rust-cli.exe dist/Ù„ØºØ©-Ø§Ù„ØµØ¯Ø£.exe

      - name: ðŸš€ Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
